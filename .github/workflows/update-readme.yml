name: Update README Stats

on:
  push:
    branches:
      - main  # Or the default branch
  schedule:
    - cron: "0 0 * * *"  # Runs every day at midnight
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write  # Allow write access to repository contents (needed to commit changes)

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (to call the API)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 3: Install dependencies (axios for API call)
      - name: Install Dependencies
        run: |
          npm install axios

      # Step 4: Fetch GitHub repo stats using the GitHub API with PAT authentication
      - name: Fetch Repository Stats and Generate Stats Image
        run: |
        const axios = require('axios');
        const fs = require('fs');
        const token = process.env.GH_TOKEN;
        const username = 'MatimbaMaholobela';  // Your GitHub username
        const apiUrl = 'https://api.github.com/user/repos?per_page=100';
        
        if (!token) {
          console.error("Error: No token found.");
          process.exit(1);
        }
        
        axios.get(apiUrl, { headers: { 'Authorization': `token ${token}` } })
          .then((response) => {
            let totalStars = 0;
            let totalForks = 0;
            let totalIssues = 0;
        
            response.data.forEach(repo => {
              totalStars += repo.stargazers_count;
              totalForks += repo.forks_count;
              totalIssues += repo.open_issues_count;
            });
        
            const statsText = `Total Stars: ${totalStars} | Total Forks: ${totalForks} | Total Open Issues: ${totalIssues}`;
            fs.writeFileSync('./github-stats.txt', statsText);
            console.log('Stats saved to github-stats.txt');
          })
          .catch((error) => {
            console.error('Error fetching repos:', error.response ? error.response.data : error.message);
            process.exit(1);
          });

      
          # Now, execute the JavaScript file with Node.js
          node generate-repo-stats.js
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Use your GitHub Token

      # Step 5: Check if the file exists and commit the image if updated
      - name: Check for Changes and Commit Stats Image
        run: |
          if git diff --exit-code; then
            echo "No changes detected"
          else
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add github-stats.txt  # Only add the relevant files
            git commit -m "Update GitHub repo stats"
            git push
          fi

      # Step 6: Update README with the new stats
      - name: Update README with Stats
        run: |
          # Append the stats to README.md
          echo "## GitHub Stats" >> README.md
          cat github-stats.txt >> README.md
          git add README.md  # Only add the README file
          git commit -m "Update README with repo stats"
          git push
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
